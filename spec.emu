<!doctype html>
<meta charset="utf8">
<link rel="stylesheet" href="./spec.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/8.4/styles/github.min.css">
<script src="./spec.js"></script>
<pre class="metadata">
title: Dynamic Import Host Adjustment
stage: 0
contributors: Mike Samuel
</pre>

<emu-clause id="sec-import-calls">
  <emu-note type="editor">
    <p>See the <a href="https://github.com/mikesamuel/dynamic-import-host-adjustment#dynamic-import-host-adjustment">explainer</a>.</p>

    <p>First, this proposal adjusts `import(...)` to stringify its argument
    via a host callout.</p>
  </emu-note>

  <h1>Import Calls</h1>

  <emu-clause id="sec-import-call-runtime-semantics-evaluation">
    <h1>Runtime Semantics: Evaluation</h1>

    <emu-grammar>ImportCall : `import` `(` AssignmentExpression `)`</emu-grammar>
    <emu-alg>
      1. Let _referencingScriptOrModule_ be ! GetActiveScriptOrModule().
      1. Let _argRef_ be the result of evaluating |AssignmentExpression|.
      1. Let _specifier_ be ? GetValue(_argRef_).
      1. Let _promiseCapability_ be ! NewPromiseCapability(%Promise%).
      1. Let _specifierString_ be <del>ToString</del> <ins>? HostDynamicValueToSpecifier</ins>(<ins>referencingScriptOrModule_, </ins>_specifier_).
      1. <ins>Assert Type(_specifierString_) is String.</ins>
      1. IfAbruptRejectPromise(_specifierString_, _promiseCapability_).
      1. Perform ! HostImportModuleDynamically(_referencingScriptOrModule_, _specifierString_, _promiseCapability_).
      1. Return _promiseCapability_.[[Promise]].
    </emu-alg>
  </emu-clause>

  <emu-note type="editor">
    <p>Second, this proposal defines the new host callout.</p>
  </emu-note>

  <emu-clause id="sec-hostdynamicvaluetospecifier" aoid="HostDynamicValueToSpecifier">
    <h1><ins>Runtime Semantics: HostDynamicValueToSpecifier ( _referencingScriptOrModule_, _specifier_ )</ins></h1>
    <p><ins>HostDynamicValueToSpecifier is an implementation-defined
    abstract operation that converts a runtime value representing a
    module specifier, _specifier_, to a string that corresponds to a
    |ModuleSpecifier| String.  The host also receives the Script
    Record or Module Record, _referencingScriptOrModule_.
    _referencingScriptOrModule_ may be *null*, if the
    resolution is being performed in the context of
    an <emu-xref href="#sec-import-calls">`import()`</emu-xref>
    expression, and there is no active script or module at that
    time.</ins></p>

    <p><ins>The default implementation performs the following steps:</ins></p>
    <emu-alg>
      1. <ins>Return ? ToString(_specifier_).</ins>
    </emu-alg>

    <p><ins>The implementation of HostDynamicValueToSpecifier must
    conform to the following requirements:</ins></p>
    <ul>
      <li><ins>When HostDynamicValueToSpecifier completes normally, its result must
        be a string.</ins></li>
      <li><ins>HostDynamicValueToSpecifier may not stringify _specifier_ more
        than once.</ins></li>
    </ul>
  </emu-clause>
</emu-clause>
